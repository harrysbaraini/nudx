export default {"compiler":[8,">= 4.3.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3="function", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    };

  return "{\n  # Flake inputs\n  inputs = {\n      nixpkgs.url = \"github:NixOS/nixpkgs\";\n      flake-utils = { url = \"github:numtide/flake-utils\"; };\n  };\n\n  # Flake outputs\n  outputs = { self, nixpkgs, flake-utils }:\n  flake-utils.lib.eachDefaultSystem (system:\n  let\n    pkgs = import nixpkgs { inherit system; };\n\n    # Build Caddy\n    caddy = with pkgs; stdenv.mkDerivation rec {\n      pname = \"caddy\";\n      version = \"2.6.4\";\n      dontUnpack = true;\n      nativeBuildInputs = [ git go xcaddy ];\n      plugins = [];\n\n      configurePhase = ''\n        export GOCACHE=$TMPDIR/go-cache\n        export GOPATH=\"$TMPDIR/go\"\n      '';\n\n      buildPhase = let\n        pluginArgs = lib.concatMapStringsSep \" \" (plugin: \"--with ${plugin}\") plugins;\n      in ''\n        runHook preBuild\n        ${xcaddy}/bin/xcaddy build \"v${version}\" ${pluginArgs}\n        runHook postBuild\n      '';\n\n      installPhase = ''\n        runHook preInstall\n        mkdir -p $out/bin\n        mv caddy $out/bin\n        runHook postInstall\n      '';\n    };\n\n    # Hostctl\n    remove_hosts_profile = pkgs.writeShellScriptBin \"remove_hosts_profile\" ''\n      sudo ${pkgs.hostctl}/bin/hostctl remove $@\n    '';\n\n    status_hosts_profile = pkgs.writeShellScriptBin \"status_hosts_profile\" ''\n      enabled=$(sudo ${pkgs.hostctl}/bin/hostctl status --raw) | awk -v profile=$1 '(NR>1 && $1==profile) {print 1}'\n      if [[ \"$enabled\" == \"1\" ]]; then\n        echo \"on\"\n      else\n        echo \"off\"\n      fi\n    '';\n\n    create_hosts_profile = pkgs.writeShellScriptBin \"create_hosts_profile\" ''\n      status=(${status_hosts_profile}/bin/status_hosts_profile $1)\n      if [[$status == \"on\"]]; then\n        ${remove_hosts_profile}/bin/remove_hosts_profile $1\n      fi\n\n      sudo ${pkgs.hostctl}/bin/hostctl add domains $@\n    '';\n\n    enable_hosts_profile = pkgs.writeShellScriptBin \"enable_hosts_profile\" ''\n      sudo ${pkgs.hostctl}/bin/hostctl enable $@\n    '';\n\n    disable_hosts_profile = pkgs.writeShellScriptBin \"disable_hosts_profile\" ''\n      sudo ${pkgs.hostctl}/bin/hostctl disable $@\n    '';\n\n    # Packages\n    packages = [ pkgs.hostctl caddy create_hosts_profile remove_hosts_profile enable_hosts_profile disable_hosts_profile ];\n  in\n  {\n    devShell = pkgs.mkShell {\n      buildInputs = packages;\n\n      shellHook = ''\n        if [[ -d \""
    + alias4(((helper = (helper = lookupProperty(helpers,"binPath") || (depth0 != null ? lookupProperty(depth0,"binPath") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"binPath","hash":{},"data":data,"loc":{"start":{"line":82,"column":18},"end":{"line":82,"column":29}}}) : helper)))
    + "\" ]]; then\n          rm -rf "
    + alias4(((helper = (helper = lookupProperty(helpers,"binPath") || (depth0 != null ? lookupProperty(depth0,"binPath") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"binPath","hash":{},"data":data,"loc":{"start":{"line":83,"column":17},"end":{"line":83,"column":28}}}) : helper)))
    + "\n        fi\n\n        mkdir -p "
    + alias4(((helper = (helper = lookupProperty(helpers,"binPath") || (depth0 != null ? lookupProperty(depth0,"binPath") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"binPath","hash":{},"data":data,"loc":{"start":{"line":86,"column":17},"end":{"line":86,"column":28}}}) : helper)))
    + "\n        ln -s ${caddy}/bin/caddy "
    + alias4(((helper = (helper = lookupProperty(helpers,"binPath") || (depth0 != null ? lookupProperty(depth0,"binPath") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"binPath","hash":{},"data":data,"loc":{"start":{"line":87,"column":33},"end":{"line":87,"column":44}}}) : helper)))
    + "/caddy\n        ln -s ${pkgs.hostctl}/bin/hostctl "
    + alias4(((helper = (helper = lookupProperty(helpers,"binPath") || (depth0 != null ? lookupProperty(depth0,"binPath") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"binPath","hash":{},"data":data,"loc":{"start":{"line":88,"column":42},"end":{"line":88,"column":53}}}) : helper)))
    + "/hostctl\n      '';\n    };\n  });\n}\n";
},"useData":true}