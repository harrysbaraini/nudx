{
  # Flake inputs
  inputs = {
      nixpkgs.url = "github:NixOS/nixpkgs";
      flake-utils = { url = "github:numtide/flake-utils"; };
  };

  # Flake outputs
  outputs = { self, nixpkgs, flake-utils }:
  flake-utils.lib.eachDefaultSystem (system:
  let
    pkgs = import nixpkgs { inherit system; };

    # Build Caddy
    caddy = with pkgs; stdenv.mkDerivation rec {
      pname = "caddy";
      version = "2.6.4";
      dontUnpack = true;
      nativeBuildInputs = [ git go xcaddy ];
      plugins = [];

      configurePhase = ''
        export GOCACHE=$TMPDIR/go-cache
        export GOPATH="$TMPDIR/go"
      '';

      buildPhase = let
        pluginArgs = lib.concatMapStringsSep " " (plugin: "--with ${plugin}") plugins;
      in ''
        runHook preBuild
        ${xcaddy}/bin/xcaddy build "v${version}" ${pluginArgs}
        runHook postBuild
      '';

      installPhase = ''
        runHook preInstall
        mkdir -p $out/bin
        mv caddy $out/bin
        runHook postInstall
      '';
    };

    # Packages
    packages = with pkgs; [caddy];
  in
  {
    devShell = pkgs.mkShell {
      buildInputs = packages;

      shellHook = ''
        ln -s ${caddy}/bin/caddy {{caddyPath}}
      '';
    };
  });
}
